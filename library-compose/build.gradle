plugins {
    alias(libs.plugins.android.library)
    alias(libs.plugins.kotlin.android)
    id 'maven-publish'
}

android {
    namespace 'com.spendesk.grapes.compose'

    compileSdk libs.versions.androidCompileSdk.get() as Integer

    defaultConfig {
        minSdkVersion libs.versions.androidMinSdk.get() as Integer
        targetSdkVersion libs.versions.androidTargetSdk.get() as Integer

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildFeatures {
        compose = true
    }

    composeOptions {
        kotlinCompilerExtensionVersion = libs.versions.compose.kotlin.compiler.get()
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_17.toString()
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    publishing {
        singleVariant('release')
    }
}

dependencies {
    testImplementation(libs.junit4)
    androidTestImplementation(libs.junit.android)
    androidTestImplementation(libs.espresso.core)

    // https://stackoverflow.com/a/75298544
    constraints {
        implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.8.0") {
            because("kotlin-stdlib-jdk7 is now a part of kotlin-stdlib")
        }
        implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.8.0") {
            because("kotlin-stdlib-jdk8 is now a part of kotlin-stdlib")
        }
    }

    api(libs.androidx.lifecycle.ktx)

    // Compose
    api(platform(libs.compose.bom))
    api(libs.bundles.compose)

    // UI Tests
    androidTestImplementation(libs.compose.tests.ui)
}

afterEvaluate {
    publishing {
        publications {
            release(MavenPublication) {
                group = 'com.github.Spendesk'
                artifactId = 'grapes-android-compose'
                version = libs.versions.grapes.version.get()

                from components.release
            }
        }
    }
}
